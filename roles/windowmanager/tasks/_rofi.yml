---
- name: ROFI | Check rofi installed version
  ansible.builtin.shell: |
    set -o pipefail;
    if command -v rofi &> /dev/null;
    then rofi -V | cut -d":" -f2 | cut -d" " -f2 |xargs ; else echo "not found"; fi
  args:
    warn: no
    executable: /bin/bash
  changed_when: false
  register: check_rofi_version
  tags:
    - always

- name: ROFI | Install rofi when conditional are defined
  become: true
  when: rofi_version not in check_rofi_version.stdout or check_rofi_version.stdout.find('not found') != -1
  block:
    - name: ROFI | Ensure rofi folder temp exists
      ansible.builtin.file:
        path: "{{ item }}"
        mode: 0755
        state: directory
      with_items:
        - "{{ temp_dir }}/rofi"
        - "{{ temp_dir }}/check"
      tags:
        - install
        - rofi

    - name: ROFI | Install build dependencies for rofi
      ansible.builtin.include_role:
        name: _0package
      vars:
        _apt_packages: "{{ __rofi_deps }}"
      tags:
        - install
        - rofi

    - name: ROFI | Download tar rofi-{{ rofi_version }}
      become: true
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: 0755
        force: True
        timeout: 30
      register: jobrofidownload
      until: jobrofidownload is succeeded
      retries: 10
      delay: 10
      with_items: "{{ rofi_download }}"
      tags:
        - install
        - rofi

    - name: ROFI | Extract tar rofi-{{ rofi_version }}
      ansible.builtin.unarchive:
        src: "{{ item.dest }}/{{ item.name }}.tar.gz"
        dest: "{{ item.dest }}"
        copy: no # with no will not copy or will deleted
      with_items: "{{ rofi_download }}"

    - name: ROFI | Install rofi
      ansible.builtin.shell: |
        ./configure --disable-check && make && sudo make install
      args:
        chdir: "{{ item.dest }}/{{ item.name }}"
        executable: /bin/bash
      changed_when: false
      with_items: "{{ rofi_download }}"
      tags:
        - install
        - rofi
