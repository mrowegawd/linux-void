---
- become: True
  block:
    - name: ASDF | Ensure git exists
      include_role:
        name: _0package
      vars:
        _apt_packages: "{{ item }}"
      with_items:
        - tzdata
        - locales-all
      tags:
        - install

    # - name: LOCALE | Ensure localisation files for '{{ config_system_locale }}' are available
    #   locale_gen:
    #     name: "{{ config_system_locale }}"
    #     state: present

    # - name: LOCALE | Ensure localisation files for '{{ config_system_language }}' are available
    #   locale_gen:
    #     name: "{{ config_system_language }}"
    #     state: present

    # - name: LOCALE | Get current locale and language configuration
    #   command: localectl status
    #   register: locale_status
    #   changed_when: false

    # - name: LOCALE | Parse 'LANG' from current locale and language configuration
    #   set_fact:
    #     locale_lang: "{{ locale_status.stdout | regex_search('LANG=([^\n]+)', '\\1') | first }}"

    # - name: LOCALE | Parse 'LANGUAGE' from current locale and language configuration
    #   set_fact:
    #     locale_language: "{{ locale_status.stdout | regex_search('LANGUAGE=([^\n]+)', '\\1') | default([locale_lang], true) | first }}"

    # - name: Configure locale to '{{ config_system_locale }}' and language to '{{ config_system_language }}'
    #   command: localectl set-locale LANG={{ config_system_locale }} LANGUAGE={{ config_system_language }}
    #   changed_when: locale_lang != config_system_locale or locale_language != config_system_language

    # - name: LOCALE | Ensure the locale exists
    #   locale_gen:
    #     name: en_US.UTF-8
    #     state: present

    # - name: LOCALE | Set as default locale
    #   command: localectl set-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

    # taken from: https://github.com/ansible/ansible/issues/44708
    - name: LOCALE | Set fact for system_settings_locale
      set_fact:
        system_settings_locale: en_US.UTF-8

    - name: LOCALE | check if locale exists
      shell: "locale -a | grep -i {{ system_settings_locale | regex_replace('-', '') | quote }}"
      register: found_locale
      changed_when: no
      failed_when: no

    - name: LOCALE | create locale
      command: "localedef -i {{ system_settings_locale | regex_replace('(.*)\\..*', '\\1') | quote }} -f {{ system_settings_locale | regex_replace('.*\\.(.*)', '\\1') | quote }} {{ system_settings_locale | quote }}"
      when: found_locale.rc != 0
  when: ansible_os_family | lower == "debian"

- become: yes
  block:
    - name: Define needed locales (for example, can be set in vars or inventory)
      set_fact:
        system_settings_locales:
          - en_US.UTF-8
          - de_DE.UTF-8

    - name: Check existing locales
      shell: "locale -a | grep -i {{ item | regex_replace('-', '') | quote }}"
      register: found_locales
      changed_when: false
      failed_when: false
      loop: "{{ system_settings_locales }}"

    - name: Create missing locales
      command: "localedef -i {{ item.item | regex_replace('(.*)\\..*', '\\1') | quote }} -f {{ item.item | regex_replace('.*\\.(.*)', '\\1') | quote }} {{ item.item | quote }}"
      when: item.rc != 0
      loop: "{{ found_locales.results }}"
  when: ansible_os_family | lower == "redhat"
