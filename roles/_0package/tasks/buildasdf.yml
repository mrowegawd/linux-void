---
- name: Install programming language and check version if exists
  become: true
  become_user: "{{ user_admin }}"
  ansible.builtin.shell: |
    set -o pipefail;
    source ~/.asdf/asdf.sh && {{ item.lang_cmd_check_version }}
  args:
    warn: no
    executable: /bin/bash
  changed_when: false
  register: check_lang_version
  ignore_errors: true

- name: Install lang name | Set fact check_lang_version_filter
  ansible.builtin.set_fact:
    check_lang_version_result: "{{ check_lang_version.stderr }} {{ check_lang_version.stdout }}"
  when: check_lang_version is defined

# - name: Just tell me whats going on..
#   debug:
#     msg: "{{ check_lang_version_result }}"

- name: Install {{ item.lang_name | upper }} | Installing {{ item.lang_name }} deps
  ansible.builtin.include_role:
    name: _0package
  vars:
    _apt_packages: "{{ item.lang_deps }}"
  when: item.lang_version not in check_lang_version_result

- name: Check plugin-list if spesific our lang is exists
  become: true
  become_user: "{{ user_admin }}"
  ansible.builtin.shell: |
    source ~/.asdf/asdf.sh && asdf plugin-list
  args:
    executable: /bin/bash
  register: check_asdf_plugin_lists
  changed_when: false
  failed_when: false
  ignore_errors: true
  when: item.lang_version not in check_lang_version_result

- name: ASDF-Go | Install plugin asdf for spesific language
  become: true
  become_user: "{{ user_admin }}"
  ansible.builtin.shell: |
    source ~/.asdf/asdf.sh && {{ item.lang_plugin_install }}
  args:
    executable: /bin/bash
  changed_when: false
  when:
    - item.lang_version not in check_lang_version_result
    - item.lang_plugin_asdf_name not in check_asdf_plugin_lists.stdout

- name: Install lang version
  become: true
  become_user: "{{ user_admin }}"
  ansible.builtin.shell: |
    source ~/.asdf/asdf.sh && asdf install {{ item.lang_plugin_asdf_name }} {{ item.lang_version }}
  args:
    executable: /bin/bash
  changed_when: false
  register: progamming_lang_installed
  when: item.lang_version not in check_lang_version_result

- name: Ensure define global version
  become: true
  become_user: "{{ user_admin }}"
  ansible.builtin.shell: |
    source ~/.asdf/asdf.sh && {{ item.lang_set_global_version }}
  args:
    executable: /bin/bash
  changed_when: false
  when:
    - item.lang_version not in check_lang_version_result
    - progamming_lang_installed is success
