---
- name: KVM AND QEMU | Install qemu and kvm system
  include_role:
    name: _0package
  vars:
    _apt_packages: "{{ __qemu_pkgs }}"
  tags:
    - install
    - docker

# - name: KVM AND QEMU | Ensure libvirtd systemd enabled
#   become: yes
#   service:
#     name: libvirtd
#     enabled: true
#     state: started

# Manage cloud image
# - name: KVM AND QEMU | Set qemu dir for images
#   file:
#     state: directory
#     path: /virt/images

# - name: Check Ubuntu 18.04 cloud image
#   uri:
#     url: https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img
#     method: HEAD
#   register: cloudimg_http_stat
#   check_mode: false

# - name: Check local cloud image
#   stat:
#     path: /virt/images/bionic-server-cloudimg-amd64.img
#     get_checksum: false
#   register: cloudimg_local_stat

# - name: Update Ubuntu 18.04 cloud image
#   get_url:
#     url: https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img
#     dest: /virt/images/bionic-server-cloudimg-amd64.img
#   when: not cloudimg_local_stat.stat.exists or
#     cloudimg_local_stat.stat.size != cloudimg_http_stat.content_length
#   register: cloudimg_local_updated

# - name: Convert cloud image qcow format
#   shell:
#     chdir: /virt/images/
#     cmd: qemu-img convert -f qcow2 bionic-server-cloudimg-amd64.img bionic-server-cloudimg-amd64.qcow2
#     creates: /virt/images/bionic-server-cloudimg-amd64.qcow2
#   when: cloudimg_local_updated.changed|bool

# VM Directory
# - name: Virtual machine directory
#   file:
#     path: /virt/vms
#     state: directory
#     owner: root
#     group: root
#     mode: 0755
# - name: Set up KVM platform
#   include_tasks: install.yml
# - name: Configure Virtual Machines
#   include_tasks: vm.yml
#   loop: "{{ virtual_machines }}"
#   loop_control:
#     loop_var: vm
