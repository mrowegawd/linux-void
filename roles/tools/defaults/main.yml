---
# INSTALL BUILD SOURCE -------------------------------------------- {{{
torrent_version: "3.00"
telegram_version: "tsetup.3.3.0"

install_tools_from_buildsource:
  pkg_version: "{{ torrent_version }}"
  pkg_deps: "{{ __torrent_deps }}"
  pkg_cmd_check_version: |
    bash -lc 'if command -v transmission-daemon &> /dev/null;
    then transmission-daemon --V | grep {{torrent_version }} | cut -d" " -f2; else echo "not found"; fi'
  pkg_url_download:
    - url: "https://github.com/transmission/transmission/releases/download/3.00/transmission-{{ torrent_version }}.tar.xz"
      tar_file: "transmission-{{ torrent_version }}.tar.xz"
      after_extract_filename: "transmission-{{ torrent_version }}"
      dest_temp_dir: "{{ temp_dir }}/torrent"
  pkg_cmd_make: |
    ./configure -q && make -s && sudo make install

  # - pkg_name: "telegram"
  #   pkg_version: "{{ telegram_version }}"
  #   pkg_deps: "{{ __telegram_deps }}"
  #   pkg_cmd_check_version: |
  #     bash -lc 'if command -v telegram &> /dev/null;
  #     then echo "found"; else echo "not found"; fi'
  #   pkg_url_download:
  #     - url: "https://telegram.org/dl/desktop/linux/{{ telegram_version }}.tar.xz"
  #       tar_file: "{{ telegram_version }}.tar.xz"
  #       after_extract_filename: "{{ telegram_version }}"
  #       dest_temp_dir: "{{ temp_dir }}/telegram"
  #   pkg_cmd_make: |
  #     tar -xf tsetup.*.*.*.tar.xz && mv Telegram /opt

#
# }}}
# INSTALL ASDF TOOLS ---------------------------------------------- {{{
install_tools_from_asdf:
  - pkg_name: "python"
    pkg_install_with: "asdf"
    # harus string (not |), karena bakal di concat dngan pkg_lists
    pkg_shell_install: "pip install -U"
    pkg_lists:
      - yt-dlp # youtube-dl are dead now
      - poetry
      - ueberzug
  - pkg_name: "ruby"
    pkg_install_with: "asdf"
    pkg_shell_install: "gem install"
    pkg_lists:
      - lolcat
  - pkg_name: "golang"
    pkg_install_with: "asdf"
    pkg_shell_install: "go get -u"
    pkg_lists:
      # - "mvdan.cc/sh/cmd/shfmt"
      # - "github.com/jesseduffield/lazydocker"
      - "github.com/jesseduffield/lazygit"
      # - "github.com/shurcooL/markdownfmt" # markdownfmt for vim
  - pkg_name: "rust"
    pkg_install_with: "asdf"
    pkg_shell_install: "cargo install"
    pkg_lists:
      - ripgrep
      - exa
        # fd find
      - "--locked bat" # alternative cat command
      - git-delta # for git
      - stylua # lua formatter (lsp)
  - pkg_name: "nodejs"
    pkg_install_with: "asdf"
    pkg_shell_install: "npm install -g"
    pkg_lists:
      - tldr # https://github.com/tldr-pages/tldr
      - nativefier # Make any web page a desktop application
  - pkg_name: "apt"
    pkg_install_with: "apt"
    pkg_shell_install: ""
    pkg_lists:
      - fd-find # fd find
      - shellcheck # bash linter (lsp)
      - graphviz # for plantuml dependencies

#
# }}}
# INSTALL BUILD GIT ----------------------------------------------- {{{
xgetres_version: "1.0"
cava_version: "0.7.4"

install_tools_from_git:
  - pkg_name: "xgetres"
    pkg_version: "{{ xgetres_version }}"
    pkg_deps: []
    pkg_cmd_check_version: |
      bash -lc 'if command -v xgetres &> /dev/null;
      then xgetres --version | cut -d" " -f2 ; else echo "not found"; fi'
    pkg_url_download:
      - repo: "https://github.com/tamirzb/xgetres.git"
        after_extract_filename: "xgetres"
        version: "master"
        dest_temp_dir: "{{ temp_dir }}/xgetres"
    pkg_cmd_make: |
      sudo make install

  - pkg_name: "cava"
    pkg_version: "{{ cava_version }}"
    pkg_deps: "{{ __cava_deps }}"
    pkg_cmd_check_version: |
      bash -lc 'if command -v cava &> /dev/null;
      then cava -version | cut -d" " -f2 | cut -d"-" -f1 ; else echo "not found"; fi'
    pkg_url_download:
      - repo: "https://github.com/karlstav/cava.git"
        after_extract_filename: "cava"
        version: "master"
        dest_temp_dir: "{{ temp_dir }}/cava"
    pkg_cmd_make: |
      ./autogen.sh
      ./configure && make
      sudo make install

#
# }}}

######
###
######

# VSCODE ---------------------------------------------------------- {{{
# Visual Studio Code version number (defaults to the latest version)
visual_studio_code_version: ""
# Build (either 'stable' or 'insiders') https://code.visualstudio.com/insiders/
# Ubuntu only (code-insiders isn't in Microsoft's RPM repo)
visual_studio_code_build: stable
vscode_apt_key:
  url: "https://packages.microsoft.com/keys/microsoft.asc"
  id: ""

vscode_apt_repo:
  file: vscode
  repo: |
    deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main

# # The package name to install
visual_studio_code_package: "{{ (visual_studio_code_build == 'insiders') | ternary('code-insiders', 'code') }}"

#
# }}}
# ALACRITTY ------------------------------------------------------- {{{
alacritty_url_download: https://api.github.com/repos/alacritty/alacritty/releases/latest
#
# }}}
# KITTY ----------------------------------------------------------- {{{
kitty_version: "0.24.1"
kitty_url_download: https://sw.kovidgoyal.net/kitty/installer.sh
#
# }}}
# AUTOENV --------------------------------------------------------- {{{
autoenv_git:
  - repo: "https://github.com/kennethreitz/autoenv.git"
    version: "master"
#
# }}}
# FZF ------------------------------------------------------------- {{{
fzf_repo:
  - name: ".fzf"
    repo: "https://github.com/junegunn/fzf.git"
    version: master

#
# }}}
# ZSH ------------------------------------------------------------- {{{
zsh_version: 5.8
zsh_plugins:
  # - repo: 'https://github.com/zplug/zplug'
  #   dest: '.zplug'
  - repo: "git://github.com/robbyrussell/oh-my-zsh.git"
    dest: ".oh-my-zsh"
  - repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
    dest: ".cache/zsh/plugins/zsh-syntax-highlighting"
  - repo: "https://github.com/urbainvaes/fzf-marks.git"
    dest: ".cache/zsh/plugins/fzf-marks"
#
# }}}

# vim: foldmethod=marker foldlevel=0
