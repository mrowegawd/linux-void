---
- name: TORRENT | Check torrent version if exists
  shell: >
    bash -lc 'if command -v torrent &> /dev/null;
    then  -V; else echo "not found"; fi' ??
  args:
    warn: no
  changed_when: false
  register: check_torrent_command
  tags:
    - always

- become: yes
  block:
    - name: TORRENT | Remove old torrent
      apt:
        name: torrent
        state: absent
      tags:
        - install
        - torrent

    - name: TORRENT | Install dependencies torrent
      include_role:
        name: _0package
      vars:
        _apt_packages: "{{ __torrent_deps }}"
      tags:
        - install
        - torrent

    - name: TORRENT | Ensure path {{ temp_dir }}/torrent are exists
      file:
        path: "{{ temp_dir }}/{{ item }}"
        state: directory
      with_items:
        - torrent
      tags:
        - install
        - torrent

    - name: TORRENT | Download torrent-{{ torrent_version }}.tar.gz
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: 0755
        force: True
        timeout: 30
      register: jobtorrentdownload
      until: jobtorrentdownload is succeeded
      retries: 10
      delay: 10
      become: True
      with_items:
        - "{{ torrent_download }}"
      tags:
        - install
        - torrent

    - name: TORRENT | Extract torrent-{{ torrent_version }}.tar.gz
      unarchive:
        src: "{{ item.dest }}/{{ item.name }}.tar.gz"
        dest: "{{ item.dest }}"
        copy: no # with no will not copy or will deleted
      with_items:
        - "{{ torrent_download }}"
      tags:
        - install
        - torrent

    - name: TORRENT | Install torrent
      shell: |
        ./configure -q && make -s && sudo make install
      args:
        chdir: "{{ item.dest }}/{{ item.name }}"
      with_items:
        - "{{ torrent_download }}"
      tags:
        - install
        - torrent

  when: torrent_version not in check_torrent_command.stdout or check_torrent_command.stdout.find('not found') != -1
